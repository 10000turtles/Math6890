#ifndefPARSE_COMMAND_H 2 #definePARSE_COMMAND_H 3 4 #include<string> 5 usingstd::string; 6 7 //----------------------------------------------------------------------------------- 8 //Parseacommandfromastring"line"andreturnainteger"value" 9 //Example: 10 // line= "-Nx=10"(input) 11 // command= "-Nx=" (input) 12 // value= 10 (output) 13 //Returnvalue:1ifcommandwasfoundinline 14 // 0ifnotfound 15 //----------------------------------------------------------------------------------- 16 intparseCommand(conststring&line,conststring&command, int&value) 17 { 18 intlen=command.length(); 19 if(line.substr(0,len)==command) 20 { 21 sscanf(line.substr(len).c_str(),"%d",&value); 22 printf("parseCommand:SETTING%s%d\n",command.c_str(),value); 23 return1; 24 } 25 return0; 26 } 27 28 //Parseadouble 29 intparseCommand(conststring&line,conststring&command,double&value) 30 { 31 intlen=command.length(); 32 if(line.substr(0,len)==command) 33 { 34 sscanf(line.substr(len).c_str(),"%le",&value); 35 printf("parseCommand:SETTING%s%e\n",command.c_str(),value); 36 return1; 37 } 38 return0; 39 } 40 41 //Parseastring 42 intparseCommand(conststring&line,conststring&command,string&value) 43 { 44 intlen=command.length(); 45 if(line.substr(0,len)==command) 46 { 47 value=line.substr(len); 48 printf("parseCommand:SETTING%s%s\n",command.c_str(),value.c_str()); 49 return1; 50 } 51 return0; 52 } 53 54 55 #endif